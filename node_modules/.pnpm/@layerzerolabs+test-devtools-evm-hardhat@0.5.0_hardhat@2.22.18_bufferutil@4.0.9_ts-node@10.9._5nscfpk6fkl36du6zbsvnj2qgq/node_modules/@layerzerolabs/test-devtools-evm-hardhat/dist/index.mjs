import { HardhatContext } from 'hardhat/internal/context';
import { Environment } from 'hardhat/internal/core/runtime-environment';
import { loadConfigAndTasks } from 'hardhat/internal/core/config/config-loading';

// src/runtime.ts
var getTestHre = (args) => {
  const context = HardhatContext.getHardhatContext();
  const environment = context.getHardhatRuntimeEnvironment();
  const hardhatArguments = { ...environment.hardhatArguments, ...args };
  const { resolvedConfig, userConfig } = loadConfigAndTasks(hardhatArguments);
  return new Environment(
    resolvedConfig,
    hardhatArguments,
    environment.tasks,
    environment.scopes,
    context.environmentExtenders,
    userConfig,
    context.providerExtenders
    // This is a bit annoying - the environmentExtenders are not stronly typed
    // so TypeScript complains that the properties required by HardhatRuntimeEnvironment
    // are not present on HardhatRuntimeEnvironmentImplementation
  );
};

export { getTestHre };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.mjs.map