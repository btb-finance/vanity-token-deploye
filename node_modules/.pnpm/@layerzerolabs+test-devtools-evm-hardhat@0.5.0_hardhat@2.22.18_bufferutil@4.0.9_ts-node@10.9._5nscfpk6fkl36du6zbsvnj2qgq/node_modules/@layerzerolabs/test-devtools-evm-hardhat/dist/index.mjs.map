{"version":3,"sources":["../src/runtime.ts"],"names":[],"mappings":";AAEA,SAAS,sBAAsB;AAC/B,SAAS,eAAe,+CAA+C;AACvE,SAAS,0BAA0B;AAW5B,IAAM,aAAa,CAAC,SAA+D;AACtF,QAAM,UAAU,eAAe,kBAAkB;AACjD,QAAM,cAAc,QAAQ,6BAA6B;AAEzD,QAAM,mBAAqC,EAAE,GAAG,YAAY,kBAAkB,GAAG,KAAK;AACtF,QAAM,EAAE,gBAAgB,WAAW,IAAI,mBAAmB,gBAAgB;AAE1E,SAAO,IAAI;AAAA,IACP;AAAA,IACA;AAAA,IACA,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR;AAAA,IACA,QAAQ;AAAA;AAAA;AAAA;AAAA,EAIZ;AACJ","sourcesContent":["import type { HardhatRuntimeEnvironment, HardhatArguments } from 'hardhat/types'\n\nimport { HardhatContext } from 'hardhat/internal/context'\nimport { Environment as HardhatRuntimeEnvironmentImplementation } from 'hardhat/internal/core/runtime-environment'\nimport { loadConfigAndTasks } from 'hardhat/internal/core/config/config-loading'\n\n/**\n * Creates a test HardhatRuntimeEnvironment with specific arguments\n *\n * ```typescript\n * const env = getTestHre({ networkName: \"bsc-testnet\", config: \"./hardhat.config.other.ts\" });\n * ```\n *\n * @returns {HardhatRuntimeEnvironment}\n */\nexport const getTestHre = (args: Partial<HardhatArguments>): HardhatRuntimeEnvironment => {\n    const context = HardhatContext.getHardhatContext()\n    const environment = context.getHardhatRuntimeEnvironment()\n\n    const hardhatArguments: HardhatArguments = { ...environment.hardhatArguments, ...args }\n    const { resolvedConfig, userConfig } = loadConfigAndTasks(hardhatArguments)\n\n    return new HardhatRuntimeEnvironmentImplementation(\n        resolvedConfig,\n        hardhatArguments,\n        environment.tasks,\n        environment.scopes,\n        context.environmentExtenders,\n        userConfig,\n        context.providerExtenders\n        // This is a bit annoying - the environmentExtenders are not stronly typed\n        // so TypeScript complains that the properties required by HardhatRuntimeEnvironment\n        // are not present on HardhatRuntimeEnvironmentImplementation\n    ) as unknown as HardhatRuntimeEnvironment\n}\n"]}