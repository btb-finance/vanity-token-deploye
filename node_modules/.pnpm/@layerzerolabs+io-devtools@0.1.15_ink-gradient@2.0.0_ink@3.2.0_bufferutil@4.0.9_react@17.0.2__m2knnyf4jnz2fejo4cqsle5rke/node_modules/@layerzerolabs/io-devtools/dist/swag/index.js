'use strict';

var React2 = require('react');
var ink = require('ink');
var Gradient = require('ink-gradient');
var process$1 = require('process');
var InkTable = require('ink-table');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React2__default = /*#__PURE__*/_interopDefault(React2);
var Gradient__default = /*#__PURE__*/_interopDefault(Gradient);
var InkTable__default = /*#__PURE__*/_interopDefault(InkTable);

// src/swag/printer.tsx
var Logo = () => {
  var _a;
  const [columns, setColumns] = React2.useState((_a = process$1.stdout.columns) != null ? _a : 80);
  const logo = columns >= 130 ? LOGO_LARGE : LOGO_SMALL;
  React2.useEffect(() => {
    const handleResize = () => {
      var _a2;
      return setColumns((_a2 = process$1.stdout.columns) != null ? _a2 : 80);
    };
    process$1.stdout.on("resize", handleResize);
    return () => {
      process$1.stdout.off("resize", handleResize);
    };
  }, []);
  return /* @__PURE__ */ React2__default.default.createElement(ink.Box, { justifyContent: "center", marginBottom: 5, marginTop: 5 }, /* @__PURE__ */ React2__default.default.createElement(Gradient__default.default, { name: "rainbow", key: logo }, /* @__PURE__ */ React2__default.default.createElement(ink.Text, null, logo)));
};
var LOGO_LARGE = `
     **********                                                                                                                  
   **************                                                                                                                
 ******************                                                                                                              
********************                                                                                                             
*********  *********                                                                                                             
*********  *********          ****                                                 ***********                                   
*********  *********          ****                                                 ***********                                   
   ******  *********          ****        *************    ****  ******   *******       ****    ******    *** **   ******        
 ********  *********          ****      *********** ****  **** ********** *******      ****   *********** ****** **********      
*********  ********           ****     ****    ****  ******** ***   ***** ****        ****   ****   ***** ****  ****    ****     
*********  ******             ****     ****    ****   ******* ********    ****      *****    *********    ***   ****    ****     
*********  *********          ********* ***********   ******   ********** ****     ********************** ***    **********  ****
*********  *********          *********  **********    ****     ********  ****     ***********  ********  ***      *******   ****
*********  *********                                 *****                                                                       
********************                                 ****                                                                        
 ******************                                                                                                              
  ****************                                                                                                               
     **********                                                                                                                  

`;
var LOGO_SMALL = `
     **********     
   **************   
 ****************** 
********************
*********  *********
*********  *********
*********  *********
   ******  *********
 ********  *********
*********  ******** 
*********  ******   
*********  *********
*********  *********
*********  *********
********************
 ****************** 
  ****************  
     **********     

`;
var RecordList = ({
  data = [],
  columns
}) => {
  return /* @__PURE__ */ React2__default.default.createElement(React2__default.default.Fragment, null, data.map((row, index) => /* @__PURE__ */ React2__default.default.createElement(Record, { data: row, columns, key: index })));
};
var Record = ({
  data = {},
  columns = ((_a) => (_a = process.stdout.columns) != null ? _a : 80)()
}) => {
  const padding = 1;
  const labels = Object.keys(data);
  const labelLengths = labels.map(({ length }) => length);
  const maxLabelLength = Math.max(1, ...labelLengths);
  const labelColumnWidth = maxLabelLength + 2 * padding;
  const valueColumnWidth = Math.max(10, columns - labelColumnWidth);
  return /* @__PURE__ */ React2__default.default.createElement(
    ink.Box,
    {
      flexDirection: "column",
      borderColor: "grey",
      borderStyle: "single",
      paddingX: 1
    },
    Object.entries(data).map(([key, value]) => {
      return /* @__PURE__ */ React2__default.default.createElement(ink.Box, { key }, /* @__PURE__ */ React2__default.default.createElement(ink.Box, { width: labelColumnWidth }, /* @__PURE__ */ React2__default.default.createElement(ink.Text, { bold: true, wrap: "truncate", color: "magenta" }, key)), /* @__PURE__ */ React2__default.default.createElement(ink.Box, { width: valueColumnWidth }, value == null ? /* @__PURE__ */ React2__default.default.createElement(ink.Text, { wrap: "wrap", color: "gray" }, "-") : /* @__PURE__ */ React2__default.default.createElement(ink.Text, { wrap: "wrap" }, String(value))));
    })
  );
};
var Table = ({ data }) => /* @__PURE__ */ React2__default.default.createElement(
  InkTable__default.default,
  {
    data,
    header: ({ children }) => /* @__PURE__ */ React2__default.default.createElement(ink.Text, { bold: true, color: "magenta" }, children)
  }
);

// src/swag/printer.tsx
var printLogo = () => ink.render(/* @__PURE__ */ React2__default.default.createElement(Logo, null)).unmount();
var printRecord = (data) => ink.render(/* @__PURE__ */ React2__default.default.createElement(Record, { data })).unmount();
var printRecords = (data) => ink.render(/* @__PURE__ */ React2__default.default.createElement(RecordList, { data })).unmount();
var printVerticalTable = (data) => ink.render(/* @__PURE__ */ React2__default.default.createElement(Table, { data })).unmount();
var ProgressBar = ({
  columns = ((_a) => (_a = process.stdout.columns) != null ? _a : 80)(),
  progress = 0,
  before = "",
  after = ""
}) => {
  const padding = before.length + after.length;
  const space = Math.max(0, columns - padding);
  const clampedProgress = Math.max(0, Math.min(1, progress));
  const numChars = Math.min(Math.floor(space * clampedProgress), space);
  const chars = CHARACTER.repeat(numChars);
  const numEmptyChars = space - numChars;
  const emptyChars = EMPTY_CHARACTER.repeat(numEmptyChars);
  return /* @__PURE__ */ React2__default.default.createElement(ink.Box, null, /* @__PURE__ */ React2__default.default.createElement(ink.Text, null, before), /* @__PURE__ */ React2__default.default.createElement(ink.Box, { alignItems: "center" }, /* @__PURE__ */ React2__default.default.createElement(Gradient__default.default, { name: "rainbow" }, /* @__PURE__ */ React2__default.default.createElement(ink.Text, null, chars)), /* @__PURE__ */ React2__default.default.createElement(ink.Text, null, emptyChars)), /* @__PURE__ */ React2__default.default.createElement(ink.Text, null, after));
};
var CHARACTER = "\u2588";
var EMPTY_CHARACTER = "\u2591";
var createProgressBar = (props = {}) => /* @__PURE__ */ React2__default.default.createElement(ProgressBar, { ...props });

Object.defineProperty(exports, "render", {
  enumerable: true,
  get: function () { return ink.render; }
});
exports.createProgressBar = createProgressBar;
exports.printLogo = printLogo;
exports.printRecord = printRecord;
exports.printRecords = printRecords;
exports.printVerticalTable = printVerticalTable;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.js.map