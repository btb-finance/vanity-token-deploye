"use strict";

var _fs = require("fs");
var _path = require("path");
// v5 of `@typescript-eslint/experimental-utils` removed this

// copied from https://github.com/babel/babel/blob/d8da63c929f2d28c401571e2a43166678c555bc4/packages/babel-helpers/src/helpers.js#L602-L606
/* istanbul ignore next */
const interopRequireDefault = obj => obj && obj.__esModule ? obj : {
  default: obj
};
const importDefault = moduleName =>
// eslint-disable-next-line @typescript-eslint/no-require-imports
interopRequireDefault(require(moduleName)).default;
const rulesDir = (0, _path.join)(__dirname, 'rules');
const excludedFiles = ['__tests__', 'utils'];
const rules = (0, _fs.readdirSync)(rulesDir).map(rule => (0, _path.parse)(rule).name).filter(rule => !excludedFiles.includes(rule)).reduce((acc, curr) => ({
  ...acc,
  [curr]: importDefault((0, _path.join)(rulesDir, curr))
}), {});
const recommendedRules = Object.entries(rules).filter(([, rule]) => rule.meta.docs.recommended).reduce( /* istanbul ignore next */
(acc, [name, rule]) => ({
  ...acc,
  [`jest-extended/${name}`]: rule.meta.docs.recommended
}), {});
const allRules = Object.entries(rules).filter(([, rule]) => !rule.meta.deprecated).reduce((acc, [name]) => ({
  ...acc,
  [`jest-extended/${name}`]: 'error'
}), {});
const createConfig = rules => ({
  plugins: ['jest-extended'],
  rules
});
module.exports = {
  configs: {
    all: createConfig(allRules),
    recommended: createConfig(recommendedRules)
  },
  rules
};